input[type="checkbox"].checkbox {
  -webkit-appearance: none;
  padding: 0;
  appearance: none;
  min-width: 1.25rem;
  width: 1.25rem;
  min-height: 1.25rem;
  height: 1.25rem;
  background-color: rgb(var(--dig-background-primary));
  border: 1px solid #eef0f2; /* TODO: read from theme */
  border-radius: 4px;
  position: relative;
  overflow: hidden;
  z-index: 0;
  transition: 240ms transform linear;

  /**
     * :::: checked ::::
     */

  &:checked {
    border-color: rgb(var(--dig-brand));
    background-color: rgb(var(--dig-brand));

    /**
         * :::: disabled checked ::::
         */

    &:disabled {
      cursor: not-allowed;
      opacity: 40%;
    }
  }

  /**
     * :::: disabled ::::
     */

  &:disabled {
    cursor: not-allowed;
    opacity: 40%;
  }
}

/**
 * ---------------------------------------------------------------------------------------------------------------------
 * :::: before ::::
 */
input[type="checkbox"].checkbox::before {
  content: "";
  width: 0.625rem;
  height: 0.625rem;
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%) scale(0);
  transition: 120ms transform linear;
}

/**
 * :::: default ::::
 */
input[type="checkbox"].checkbox::before {
  background-image: url('data:image/svg+xml,<svg width="11" height="8" viewBox="0 0 11 8" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M1.00002 4.09142L3.75278 6.8442L9.597 1" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/></svg>');
  background-repeat: no-repeat;
  background-size: contain;
  background-position: center center;
}

/**
 * :::: indeterminate ::::
 */
input[type="checkbox"][data-indeterminate="true"].checkbox::before {
  background-image: url('data:image/svg+xml,<svg width="10" height="2" viewBox="0 0 10 2" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M1.5 1H8.5" stroke="white" stroke-width="2" stroke-linecap="round"/></svg>');
  background-repeat: no-repeat;
  background-size: contain;
  background-position: center center;
}

/**
 * :::: checked ::::
 */
input[type="checkbox"].checkbox:checked::before {
  transform: translate(-50%, -50%) scale(1);
}
